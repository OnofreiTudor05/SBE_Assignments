PUBLICATIONS GENERATED: 200
Time spent generating: 0.005004405975341797ms
(stationId: 69);(city: Galati);(temp: -19);(rain: 0.05);(wind: 93);(direction: S);(date: 13.04.2023);
(stationId: 27);(city: Harlau);(temp: -15);(rain: 0.25);(wind: 79);(direction: W);(date: 12.04.2023);
(stationId: 4);(city: Bucharest);(temp: 24);(rain: 0.6);(wind: 32);(direction: SW);(date: 13.04.2023);
(stationId: 7);(city: Harlau);(temp: -5);(rain: 0.73);(wind: 24);(direction: E);(date: 11.04.2023);
(stationId: 1);(city: Darabani);(temp: 20);(rain: 0.27);(wind: 94);(direction: NE);(date: 12.04.2023);
(stationId: 7);(city: Braila);(temp: 25);(rain: 0.24);(wind: 21);(direction: SW);(date: 16.04.2023);
(stationId: 7);(city: Bucharest);(temp: 4);(rain: 0.7);(wind: 22);(direction: SW);(date: 13.04.2023);
(stationId: 27);(city: Braila);(temp: 16);(rain: 0.71);(wind: 24);(direction: S);(date: 11.04.2023);
(stationId: 15);(city: Bucharest);(temp: -15);(rain: 0.51);(wind: 74);(direction: N);(date: 12.04.2023);
(stationId: 1);(city: Harlau);(temp: -9);(rain: 0.8);(wind: 25);(direction: NE);(date: 14.04.2023);
(stationId: 15);(city: Galati);(temp: 30);(rain: 0.99);(wind: 16);(direction: SE);(date: 12.04.2023);
(stationId: 4);(city: Harlau);(temp: -2);(rain: 0.18);(wind: 83);(direction: NE);(date: 13.04.2023);
(stationId: 4);(city: Bucharest);(temp: 30);(rain: 0.69);(wind: 93);(direction: SE);(date: 12.04.2023);
(stationId: 69);(city: Braila);(temp: 12);(rain: 0.56);(wind: 23);(direction: NE);(date: 11.04.2023);
(stationId: 15);(city: Bucharest);(temp: 4);(rain: 0.18);(wind: 58);(direction: W);(date: 11.04.2023);
(stationId: 69);(city: Bucharest);(temp: 38);(rain: 0.65);(wind: 14);(direction: W);(date: 13.04.2023);
(stationId: 23);(city: Galati);(temp: -9);(rain: 0.86);(wind: 68);(direction: NE);(date: 11.04.2023);
(stationId: 7);(city: Darabani);(temp: 28);(rain: 0.16);(wind: 0);(direction: SW);(date: 14.04.2023);
(stationId: 1);(city: Galati);(temp: 30);(rain: 0.74);(wind: 75);(direction: N);(date: 12.04.2023);
(stationId: 69);(city: Darabani);(temp: 12);(rain: 0.34);(wind: 92);(direction: S);(date: 13.04.2023);
(stationId: 1);(city: Harlau);(temp: 26);(rain: 0.05);(wind: 25);(direction: S);(date: 15.04.2023);
(stationId: 1);(city: Harlau);(temp: 17);(rain: 0.8);(wind: 91);(direction: N);(date: 10.04.2023);
(stationId: 4);(city: Bucharest);(temp: 9);(rain: 0.55);(wind: 40);(direction: S);(date: 14.04.2023);
(stationId: 15);(city: Darabani);(temp: -10);(rain: 0.65);(wind: 22);(direction: S);(date: 15.04.2023);
(stationId: 15);(city: Harlau);(temp: -3);(rain: 0.89);(wind: 76);(direction: N);(date: 16.04.2023);
(stationId: 69);(city: Braila);(temp: 0);(rain: 0.7);(wind: 2);(direction: N);(date: 11.04.2023);
(stationId: 1);(city: Bucharest);(temp: -5);(rain: 0.48);(wind: 54);(direction: NE);(date: 13.04.2023);
(stationId: 69);(city: Bucharest);(temp: -10);(rain: 0.44);(wind: 25);(direction: W);(date: 14.04.2023);
(stationId: 69);(city: Braila);(temp: -1);(rain: 0.59);(wind: 44);(direction: E);(date: 13.04.2023);
(stationId: 1);(city: Galati);(temp: 23);(rain: 0.65);(wind: 97);(direction: W);(date: 15.04.2023);
(stationId: 23);(city: Harlau);(temp: 15);(rain: 0.34);(wind: 16);(direction: S);(date: 15.04.2023);
(stationId: 27);(city: Bucharest);(temp: 34);(rain: 0.55);(wind: 63);(direction: NE);(date: 12.04.2023);
(stationId: 7);(city: Braila);(temp: 38);(rain: 0.7);(wind: 14);(direction: NE);(date: 16.04.2023);
(stationId: 27);(city: Bucharest);(temp: -14);(rain: 0.18);(wind: 7);(direction: W);(date: 15.04.2023);
(stationId: 69);(city: Bucharest);(temp: -20);(rain: 0.26);(wind: 1);(direction: N);(date: 13.04.2023);
(stationId: 69);(city: Harlau);(temp: 21);(rain: 0.24);(wind: 83);(direction: S);(date: 13.04.2023);
(stationId: 4);(city: Galati);(temp: 22);(rain: 0.42);(wind: 97);(direction: W);(date: 15.04.2023);
(stationId: 23);(city: Galati);(temp: 34);(rain: 0.81);(wind: 16);(direction: E);(date: 13.04.2023);
(stationId: 7);(city: Darabani);(temp: 27);(rain: 0.6);(wind: 87);(direction: SE);(date: 12.04.2023);
(stationId: 4);(city: Bucharest);(temp: -16);(rain: 0.44);(wind: 74);(direction: SE);(date: 15.04.2023);
(stationId: 27);(city: Bucharest);(temp: 11);(rain: 0.59);(wind: 37);(direction: S);(date: 15.04.2023);
(stationId: 1);(city: Darabani);(temp: -7);(rain: 0.61);(wind: 41);(direction: S);(date: 11.04.2023);
(stationId: 27);(city: Darabani);(temp: -18);(rain: 0.43);(wind: 71);(direction: N);(date: 12.04.2023);
(stationId: 1);(city: Bucharest);(temp: 34);(rain: 0.01);(wind: 51);(direction: E);(date: 16.04.2023);
(stationId: 1);(city: Galati);(temp: 20);(rain: 0.08);(wind: 68);(direction: S);(date: 15.04.2023);
(stationId: 23);(city: Galati);(temp: -2);(rain: 0.18);(wind: 18);(direction: SE);(date: 10.04.2023);
(stationId: 4);(city: Darabani);(temp: -2);(rain: 0.85);(wind: 44);(direction: SW);(date: 14.04.2023);
(stationId: 27);(city: Bucharest);(temp: 17);(rain: 0.81);(wind: 81);(direction: SE);(date: 12.04.2023);
(stationId: 4);(city: Braila);(temp: -12);(rain: 0.74);(wind: 33);(direction: S);(date: 16.04.2023);
(stationId: 1);(city: Darabani);(temp: 14);(rain: 0.22);(wind: 69);(direction: N);(date: 12.04.2023);
(stationId: 23);(city: Braila);(temp: 32);(rain: 0.63);(wind: 94);(direction: SE);(date: 13.04.2023);
(stationId: 7);(city: Braila);(temp: 37);(rain: 0.62);(wind: 8);(direction: W);(date: 12.04.2023);
(stationId: 4);(city: Galati);(temp: -10);(rain: 0.18);(wind: 86);(direction: W);(date: 13.04.2023);
(stationId: 4);(city: Braila);(temp: -8);(rain: 0.43);(wind: 85);(direction: E);(date: 16.04.2023);
(stationId: 1);(city: Galati);(temp: -1);(rain: 0.78);(wind: 89);(direction: E);(date: 12.04.2023);
(stationId: 1);(city: Braila);(temp: -7);(rain: 0.5);(wind: 44);(direction: SE);(date: 12.04.2023);
(stationId: 7);(city: Braila);(temp: -2);(rain: 0.14);(wind: 27);(direction: NE);(date: 12.04.2023);
(stationId: 7);(city: Galati);(temp: -6);(rain: 0.17);(wind: 59);(direction: N);(date: 10.04.2023);
(stationId: 15);(city: Braila);(temp: 1);(rain: 0.29);(wind: 34);(direction: N);(date: 12.04.2023);
(stationId: 15);(city: Braila);(temp: 0);(rain: 0.47);(wind: 32);(direction: SW);(date: 15.04.2023);
(stationId: 23);(city: Bucharest);(temp: -10);(rain: 0.01);(wind: 18);(direction: SE);(date: 13.04.2023);
(stationId: 27);(city: Bucharest);(temp: 14);(rain: 0.17);(wind: 92);(direction: S);(date: 11.04.2023);
(stationId: 15);(city: Galati);(temp: 29);(rain: 0.22);(wind: 21);(direction: S);(date: 10.04.2023);
(stationId: 7);(city: Galati);(temp: 30);(rain: 0.67);(wind: 91);(direction: SW);(date: 15.04.2023);
(stationId: 27);(city: Darabani);(temp: -20);(rain: 0.94);(wind: 24);(direction: S);(date: 16.04.2023);
(stationId: 27);(city: Harlau);(temp: -19);(rain: 0.14);(wind: 3);(direction: S);(date: 16.04.2023);
(stationId: 7);(city: Harlau);(temp: -19);(rain: 0.63);(wind: 88);(direction: SE);(date: 14.04.2023);
(stationId: 1);(city: Galati);(temp: 4);(rain: 0.85);(wind: 57);(direction: E);(date: 11.04.2023);
(stationId: 69);(city: Galati);(temp: -15);(rain: 0.96);(wind: 3);(direction: E);(date: 10.04.2023);
(stationId: 4);(city: Darabani);(temp: 0);(rain: 0.79);(wind: 98);(direction: SW);(date: 12.04.2023);
(stationId: 7);(city: Darabani);(temp: 6);(rain: 0.88);(wind: 71);(direction: NE);(date: 13.04.2023);
(stationId: 4);(city: Harlau);(temp: -11);(rain: 0.63);(wind: 73);(direction: NE);(date: 12.04.2023);
(stationId: 27);(city: Galati);(temp: 39);(rain: 0.16);(wind: 9);(direction: N);(date: 14.04.2023);
(stationId: 23);(city: Harlau);(temp: 35);(rain: 0.99);(wind: 0);(direction: SE);(date: 10.04.2023);
(stationId: 1);(city: Harlau);(temp: 6);(rain: 0.22);(wind: 81);(direction: S);(date: 14.04.2023);
(stationId: 27);(city: Bucharest);(temp: -14);(rain: 0.52);(wind: 72);(direction: NE);(date: 11.04.2023);
(stationId: 15);(city: Darabani);(temp: 22);(rain: 0.36);(wind: 26);(direction: SW);(date: 15.04.2023);
(stationId: 27);(city: Darabani);(temp: -2);(rain: 0.16);(wind: 24);(direction: SE);(date: 11.04.2023);
(stationId: 27);(city: Braila);(temp: -19);(rain: 0.09);(wind: 62);(direction: S);(date: 13.04.2023);
(stationId: 1);(city: Darabani);(temp: 23);(rain: 0.86);(wind: 85);(direction: S);(date: 15.04.2023);
(stationId: 4);(city: Bucharest);(temp: -3);(rain: 0.71);(wind: 30);(direction: SW);(date: 15.04.2023);
(stationId: 4);(city: Bucharest);(temp: 33);(rain: 0.77);(wind: 78);(direction: NE);(date: 13.04.2023);
(stationId: 4);(city: Darabani);(temp: 27);(rain: 0.19);(wind: 97);(direction: SE);(date: 11.04.2023);
(stationId: 23);(city: Harlau);(temp: 24);(rain: 0.18);(wind: 12);(direction: W);(date: 15.04.2023);
(stationId: 4);(city: Harlau);(temp: -17);(rain: 0.38);(wind: 63);(direction: N);(date: 13.04.2023);
(stationId: 4);(city: Galati);(temp: 31);(rain: 0.68);(wind: 2);(direction: NE);(date: 16.04.2023);
(stationId: 4);(city: Harlau);(temp: 22);(rain: 0.57);(wind: 0);(direction: E);(date: 13.04.2023);
(stationId: 27);(city: Braila);(temp: 13);(rain: 0.92);(wind: 8);(direction: SW);(date: 15.04.2023);
(stationId: 4);(city: Bucharest);(temp: -15);(rain: 0.27);(wind: 46);(direction: SW);(date: 13.04.2023);
(stationId: 23);(city: Bucharest);(temp: -2);(rain: 0.19);(wind: 33);(direction: SE);(date: 14.04.2023);
(stationId: 15);(city: Harlau);(temp: -7);(rain: 0.04);(wind: 90);(direction: NE);(date: 14.04.2023);
(stationId: 23);(city: Galati);(temp: 9);(rain: 0.17);(wind: 78);(direction: S);(date: 12.04.2023);
(stationId: 4);(city: Bucharest);(temp: -10);(rain: 0.39);(wind: 48);(direction: E);(date: 14.04.2023);
(stationId: 4);(city: Galati);(temp: -7);(rain: 0.63);(wind: 51);(direction: N);(date: 10.04.2023);
(stationId: 69);(city: Darabani);(temp: -2);(rain: 0.5);(wind: 65);(direction: S);(date: 14.04.2023);
(stationId: 1);(city: Galati);(temp: 16);(rain: 0.31);(wind: 51);(direction: W);(date: 16.04.2023);
(stationId: 15);(city: Braila);(temp: 6);(rain: 0.43);(wind: 22);(direction: SW);(date: 11.04.2023);
(stationId: 69);(city: Galati);(temp: 12);(rain: 0.28);(wind: 5);(direction: N);(date: 11.04.2023);
(stationId: 27);(city: Darabani);(temp: 19);(rain: 0.52);(wind: 93);(direction: N);(date: 12.04.2023);
(stationId: 27);(city: Darabani);(temp: 36);(rain: 0.2);(wind: 92);(direction: SE);(date: 16.04.2023);
(stationId: 7);(city: Braila);(temp: 18);(rain: 0.14);(wind: 76);(direction: E);(date: 14.04.2023);
(stationId: 4);(city: Bucharest);(temp: -2);(rain: 0.68);(wind: 88);(direction: W);(date: 14.04.2023);
(stationId: 15);(city: Bucharest);(temp: 7);(rain: 0.24);(wind: 37);(direction: SE);(date: 12.04.2023);
(stationId: 15);(city: Galati);(temp: 20);(rain: 0.81);(wind: 14);(direction: SE);(date: 10.04.2023);
(stationId: 15);(city: Harlau);(temp: 8);(rain: 0.65);(wind: 34);(direction: SW);(date: 12.04.2023);
(stationId: 7);(city: Bucharest);(temp: -15);(rain: 0.64);(wind: 42);(direction: N);(date: 11.04.2023);
(stationId: 1);(city: Harlau);(temp: 30);(rain: 0.92);(wind: 4);(direction: E);(date: 15.04.2023);
(stationId: 69);(city: Harlau);(temp: 10);(rain: 0.74);(wind: 79);(direction: W);(date: 14.04.2023);
(stationId: 27);(city: Bucharest);(temp: 9);(rain: 0.99);(wind: 68);(direction: N);(date: 15.04.2023);
(stationId: 69);(city: Harlau);(temp: 25);(rain: 0.06);(wind: 57);(direction: S);(date: 15.04.2023);
(stationId: 23);(city: Darabani);(temp: 8);(rain: 0.37);(wind: 25);(direction: SE);(date: 10.04.2023);
(stationId: 1);(city: Darabani);(temp: 20);(rain: 0.05);(wind: 16);(direction: W);(date: 11.04.2023);
(stationId: 27);(city: Galati);(temp: -2);(rain: 0.24);(wind: 49);(direction: E);(date: 12.04.2023);
(stationId: 7);(city: Braila);(temp: -10);(rain: 0.04);(wind: 80);(direction: SW);(date: 16.04.2023);
(stationId: 15);(city: Bucharest);(temp: 32);(rain: 0.62);(wind: 60);(direction: N);(date: 11.04.2023);
(stationId: 7);(city: Darabani);(temp: 8);(rain: 0.04);(wind: 66);(direction: W);(date: 10.04.2023);
(stationId: 7);(city: Harlau);(temp: 18);(rain: 0.21);(wind: 80);(direction: E);(date: 14.04.2023);
(stationId: 1);(city: Darabani);(temp: 22);(rain: 0.13);(wind: 28);(direction: SE);(date: 15.04.2023);
(stationId: 15);(city: Darabani);(temp: -3);(rain: 0.4);(wind: 34);(direction: N);(date: 12.04.2023);
(stationId: 4);(city: Bucharest);(temp: 6);(rain: 0.29);(wind: 47);(direction: SE);(date: 16.04.2023);
(stationId: 1);(city: Bucharest);(temp: 10);(rain: 0.58);(wind: 62);(direction: NE);(date: 14.04.2023);
(stationId: 4);(city: Bucharest);(temp: 19);(rain: 0.32);(wind: 80);(direction: W);(date: 14.04.2023);
(stationId: 7);(city: Braila);(temp: 6);(rain: 0.11);(wind: 66);(direction: S);(date: 14.04.2023);
(stationId: 69);(city: Bucharest);(temp: -12);(rain: 0.31);(wind: 36);(direction: W);(date: 11.04.2023);
(stationId: 69);(city: Galati);(temp: 0);(rain: 0.59);(wind: 63);(direction: N);(date: 13.04.2023);
(stationId: 7);(city: Braila);(temp: 37);(rain: 0.99);(wind: 55);(direction: E);(date: 14.04.2023);
(stationId: 15);(city: Harlau);(temp: 37);(rain: 0.63);(wind: 99);(direction: NE);(date: 12.04.2023);
(stationId: 15);(city: Harlau);(temp: 29);(rain: 0.88);(wind: 99);(direction: NE);(date: 13.04.2023);
(stationId: 1);(city: Harlau);(temp: 39);(rain: 0.61);(wind: 62);(direction: N);(date: 10.04.2023);
(stationId: 23);(city: Darabani);(temp: 37);(rain: 0.59);(wind: 0);(direction: E);(date: 10.04.2023);
(stationId: 23);(city: Bucharest);(temp: 4);(rain: 0.83);(wind: 0);(direction: SW);(date: 11.04.2023);
(stationId: 15);(city: Bucharest);(temp: -13);(rain: 0.53);(wind: 49);(direction: SW);(date: 10.04.2023);
(stationId: 23);(city: Darabani);(temp: 23);(rain: 0.78);(wind: 32);(direction: SE);(date: 16.04.2023);
(stationId: 4);(city: Galati);(temp: 0);(rain: 0.4);(wind: 43);(direction: SW);(date: 13.04.2023);
(stationId: 1);(city: Darabani);(temp: 0);(rain: 0.54);(wind: 62);(direction: S);(date: 11.04.2023);
(stationId: 4);(city: Braila);(temp: 13);(rain: 0.81);(wind: 18);(direction: S);(date: 13.04.2023);
(stationId: 4);(city: Bucharest);(temp: 17);(rain: 0.64);(wind: 88);(direction: S);(date: 14.04.2023);
(stationId: 1);(city: Harlau);(temp: 12);(rain: 0.57);(wind: 56);(direction: SW);(date: 16.04.2023);
(stationId: 7);(city: Harlau);(temp: -6);(rain: 0.44);(wind: 58);(direction: S);(date: 11.04.2023);
(stationId: 15);(city: Darabani);(temp: 24);(rain: 0.32);(wind: 37);(direction: W);(date: 15.04.2023);
(stationId: 69);(city: Braila);(temp: -20);(rain: 0.43);(wind: 23);(direction: SE);(date: 11.04.2023);
(stationId: 27);(city: Darabani);(temp: 15);(rain: 0.25);(wind: 51);(direction: SE);(date: 16.04.2023);
(stationId: 15);(city: Galati);(temp: 15);(rain: 0.31);(wind: 5);(direction: E);(date: 13.04.2023);
(stationId: 69);(city: Darabani);(temp: -4);(rain: 0.33);(wind: 81);(direction: S);(date: 16.04.2023);
(stationId: 7);(city: Braila);(temp: 5);(rain: 0.41);(wind: 56);(direction: E);(date: 13.04.2023);
(stationId: 7);(city: Harlau);(temp: 27);(rain: 0.49);(wind: 27);(direction: N);(date: 11.04.2023);
(stationId: 69);(city: Darabani);(temp: 17);(rain: 0.18);(wind: 92);(direction: N);(date: 14.04.2023);
(stationId: 4);(city: Darabani);(temp: 23);(rain: 0.26);(wind: 89);(direction: SE);(date: 10.04.2023);
(stationId: 4);(city: Darabani);(temp: -14);(rain: 0.09);(wind: 45);(direction: SE);(date: 13.04.2023);
(stationId: 69);(city: Braila);(temp: -5);(rain: 0.78);(wind: 19);(direction: W);(date: 16.04.2023);
(stationId: 23);(city: Harlau);(temp: 39);(rain: 0.92);(wind: 99);(direction: N);(date: 11.04.2023);
(stationId: 23);(city: Bucharest);(temp: 38);(rain: 0.51);(wind: 75);(direction: NE);(date: 16.04.2023);
(stationId: 7);(city: Galati);(temp: -13);(rain: 0.84);(wind: 45);(direction: SW);(date: 12.04.2023);
(stationId: 7);(city: Galati);(temp: 0);(rain: 0.24);(wind: 56);(direction: NE);(date: 10.04.2023);
(stationId: 27);(city: Darabani);(temp: 7);(rain: 0.17);(wind: 73);(direction: N);(date: 14.04.2023);
(stationId: 1);(city: Harlau);(temp: 14);(rain: 0.88);(wind: 87);(direction: NE);(date: 10.04.2023);
(stationId: 23);(city: Galati);(temp: 36);(rain: 0.14);(wind: 57);(direction: S);(date: 11.04.2023);
(stationId: 1);(city: Harlau);(temp: -18);(rain: 0.13);(wind: 78);(direction: SE);(date: 10.04.2023);
(stationId: 23);(city: Harlau);(temp: -18);(rain: 0.52);(wind: 15);(direction: SW);(date: 10.04.2023);
(stationId: 1);(city: Braila);(temp: -18);(rain: 0.97);(wind: 50);(direction: N);(date: 11.04.2023);
(stationId: 7);(city: Braila);(temp: 15);(rain: 0.2);(wind: 68);(direction: SE);(date: 15.04.2023);
(stationId: 4);(city: Darabani);(temp: -7);(rain: 0.39);(wind: 71);(direction: W);(date: 12.04.2023);
(stationId: 15);(city: Bucharest);(temp: -17);(rain: 0.64);(wind: 55);(direction: SE);(date: 15.04.2023);
(stationId: 4);(city: Braila);(temp: -18);(rain: 0.9);(wind: 42);(direction: S);(date: 11.04.2023);
(stationId: 7);(city: Darabani);(temp: 19);(rain: 0.48);(wind: 95);(direction: E);(date: 12.04.2023);
(stationId: 69);(city: Harlau);(temp: 6);(rain: 0.13);(wind: 41);(direction: S);(date: 16.04.2023);
(stationId: 7);(city: Darabani);(temp: 20);(rain: 0.45);(wind: 61);(direction: NE);(date: 15.04.2023);
(stationId: 69);(city: Darabani);(temp: 8);(rain: 0.84);(wind: 23);(direction: E);(date: 12.04.2023);
(stationId: 27);(city: Bucharest);(temp: 16);(rain: 0.29);(wind: 26);(direction: SE);(date: 11.04.2023);
(stationId: 27);(city: Bucharest);(temp: 8);(rain: 0.34);(wind: 66);(direction: E);(date: 16.04.2023);
(stationId: 1);(city: Darabani);(temp: -10);(rain: 0.09);(wind: 11);(direction: SE);(date: 16.04.2023);
(stationId: 27);(city: Braila);(temp: 16);(rain: 0.33);(wind: 22);(direction: N);(date: 10.04.2023);
(stationId: 15);(city: Braila);(temp: 39);(rain: 0.91);(wind: 73);(direction: NE);(date: 13.04.2023);
(stationId: 27);(city: Harlau);(temp: 13);(rain: 0.57);(wind: 63);(direction: NE);(date: 13.04.2023);
(stationId: 7);(city: Darabani);(temp: -17);(rain: 0.17);(wind: 8);(direction: NE);(date: 11.04.2023);
(stationId: 7);(city: Galati);(temp: -4);(rain: 0.29);(wind: 23);(direction: S);(date: 16.04.2023);
(stationId: 69);(city: Braila);(temp: 0);(rain: 0.7);(wind: 29);(direction: SW);(date: 14.04.2023);
(stationId: 27);(city: Bucharest);(temp: 6);(rain: 0.44);(wind: 92);(direction: SE);(date: 16.04.2023);
(stationId: 4);(city: Bucharest);(temp: 32);(rain: 0.39);(wind: 88);(direction: N);(date: 15.04.2023);
(stationId: 27);(city: Bucharest);(temp: 25);(rain: 0.31);(wind: 95);(direction: NE);(date: 12.04.2023);
(stationId: 1);(city: Darabani);(temp: -3);(rain: 0.74);(wind: 38);(direction: N);(date: 14.04.2023);
(stationId: 4);(city: Darabani);(temp: -9);(rain: 0.44);(wind: 38);(direction: E);(date: 13.04.2023);
(stationId: 23);(city: Darabani);(temp: 31);(rain: 0.17);(wind: 69);(direction: W);(date: 16.04.2023);
(stationId: 1);(city: Harlau);(temp: 5);(rain: 0.83);(wind: 74);(direction: NE);(date: 12.04.2023);
(stationId: 23);(city: Braila);(temp: 9);(rain: 0.26);(wind: 82);(direction: W);(date: 15.04.2023);
(stationId: 27);(city: Galati);(temp: 3);(rain: 0.55);(wind: 73);(direction: E);(date: 14.04.2023);
(stationId: 27);(city: Braila);(temp: 15);(rain: 0.97);(wind: 49);(direction: N);(date: 12.04.2023);
(stationId: 7);(city: Galati);(temp: 29);(rain: 0.92);(wind: 37);(direction: SW);(date: 11.04.2023);
(stationId: 23);(city: Bucharest);(temp: 29);(rain: 0.94);(wind: 27);(direction: NE);(date: 13.04.2023);
(stationId: 27);(city: Darabani);(temp: 16);(rain: 0.64);(wind: 72);(direction: SW);(date: 15.04.2023);
(stationId: 7);(city: Harlau);(temp: -13);(rain: 0.11);(wind: 38);(direction: SW);(date: 16.04.2023);
(stationId: 4);(city: Bucharest);(temp: 36);(rain: 0.81);(wind: 96);(direction: W);(date: 13.04.2023);
(stationId: 1);(city: Bucharest);(temp: -1);(rain: 0.53);(wind: 47);(direction: W);(date: 13.04.2023);
(stationId: 7);(city: Darabani);(temp: 11);(rain: 0.61);(wind: 72);(direction: S);(date: 12.04.2023);
(stationId: 15);(city: Harlau);(temp: 23);(rain: 0.19);(wind: 68);(direction: W);(date: 12.04.2023);
(stationId: 4);(city: Bucharest);(temp: 30);(rain: 0.5);(wind: 14);(direction: N);(date: 11.04.2023);
(stationId: 27);(city: Braila);(temp: 39);(rain: 0.58);(wind: 94);(direction: E);(date: 11.04.2023);
(stationId: 7);(city: Braila);(temp: -13);(rain: 0.8);(wind: 9);(direction: N);(date: 14.04.2023);
(stationId: 1);(city: Darabani);(temp: 31);(rain: 0.69);(wind: 42);(direction: N);(date: 15.04.2023);
(stationId: 7);(city: Harlau);(temp: -17);(rain: 0.87);(wind: 48);(direction: S);(date: 13.04.2023);
SUBSCRIPTIONS GENERATED: 10000
Time spent generating: 0.29529476165771484ms
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: ==, value: 0.8);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.0);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: temp, operator: ==, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Bucharest);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.2);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: ==, value: 0.3);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: ==, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.1);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Braila);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: <, value: 8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.4);(factor: temp, operator: <=, value: -7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: !=, value: 2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <=, value: 0.2);(factor: temp, operator: >=, value: 28);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >=, value: 0.4);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.9);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: ==, value: 8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: ==, value: 15.04.2023);(factor: temp, operator: ==, value: 17);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 7);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.5);(factor: temp, operator: <, value: 28);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 15);(factor: temp, operator: <, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: !=, value: 28);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);(factor: temp, operator: <, value: -20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);(factor: temp, operator: ==, value: 20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.7);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 1.0);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: temp, operator: !=, value: -17);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: temp, operator: >=, value: -4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 23);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 7);(factor: date, operator: ==, value: 15.04.2023);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.8);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 69);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 15);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: <=, value: 39);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 15);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 1.0);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 23);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >, value: 0.1);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 15);(factor: temp, operator: >=, value: 17);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.2);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >=, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);(factor: temp, operator: ==, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 69);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: rain, operator: !=, value: 0.5);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: ==, value: 12.04.2023);(factor: temp, operator: ==, value: -7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);(factor: city, operator: !=, value: Galati);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: ==, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 15);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.2);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 23);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: temp, operator: <=, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: <=, value: -11);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.1);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 15);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.2);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: temp, operator: >=, value: 19);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: <, value: 6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 4);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 7);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 27);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 1.0);(factor: temp, operator: >, value: 30);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 4);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.7);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.0);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >=, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: 10);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.8);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: >=, value: 10);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 23);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.3);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.2);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.7);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.9);(factor: temp, operator: ==, value: -1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.1);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: temp, operator: >, value: 10);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.1);(factor: temp, operator: <, value: 3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.3);(factor: date, operator: ==, value: 14.04.2023);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.4);(factor: temp, operator: !=, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 15);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);(factor: temp, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 4);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.2);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: ==, value: 0.0);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.2);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 7);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.4);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.5);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: ==, value: 1.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.7);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.9);(factor: temp, operator: <, value: 34);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: temp, operator: <, value: 37);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.4);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: ==, value: 10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 1.0);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 1);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 1.0);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: ==, value: 39);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: <=, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 7);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Braila);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: ==, value: 1.0);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.6);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: <=, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 1.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: <=, value: -6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.2);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 1.0);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: !=, value: 0.5);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >=, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);(factor: temp, operator: <=, value: -15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: ==, value: -12);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 1.0);(factor: date, operator: ==, value: 12.04.2023);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.5);(factor: temp, operator: ==, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 15);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 7);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Harlau);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: !=, value: -4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 1.0);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.1);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 10);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 15);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: !=, value: 11);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.5);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 23);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 1.0);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 23);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <=, value: 0.9);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.4);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.6);(factor: temp, operator: >=, value: -5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 27);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.8);(factor: temp, operator: <=, value: 11);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 15);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <=, value: 0.1);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 23);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.9);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: ==, value: -1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: >, value: 10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.1);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: <=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 4);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: ==, value: -8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.0);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Galati);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: >, value: 0.1);(factor: temp, operator: >=, value: 25);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.7);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: ==, value: 16.04.2023);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >=, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Galati);(factor: temp, operator: <=, value: 14);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: ==, value: 0.2);(factor: temp, operator: <, value: -2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: <, value: -7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.8);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: ==, value: 0.8);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: !=, value: 37);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.1);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 7);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: !=, value: -5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 13.04.2023);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);(factor: temp, operator: >=, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.3);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.5);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: !=, value: Bucharest);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 27);(factor: temp, operator: >=, value: 16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.4);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 4);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 23);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 7);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 23);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: !=, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.2);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 15);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: date, operator: ==, value: 16.04.2023);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 27);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <=, value: 0.7);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: <=, value: 35);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 1);(factor: temp, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >, value: 0.3);(factor: temp, operator: >=, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: !=, value: -6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 27);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: !=, value: 22);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 15);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 15.04.2023);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.4);(factor: temp, operator: <, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 69);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.5);(factor: temp, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <=, value: 0.7);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 23);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: temp, operator: <=, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: !=, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.2);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 69);(factor: rain, operator: ==, value: 0.3);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.5);(factor: temp, operator: <, value: -15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: <, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 15);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.9);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 0.5);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: ==, value: 10);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);(factor: temp, operator: <, value: 10);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 1.0);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 69);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: <=, value: 18);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 4);(factor: rain, operator: ==, value: 0.8);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: !=, value: -9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.6);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 23);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 23);(factor: city, operator: !=, value: Bucharest);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: !=, value: 0.5);(factor: temp, operator: ==, value: -7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.9);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.5);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.2);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: temp, operator: ==, value: 6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: >, value: 30);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.6);(factor: temp, operator: ==, value: -8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.1);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.2);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: ==, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 1);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 4);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.7);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 1);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: <, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 15);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 1.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >=, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.0);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: ==, value: 0.2);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 1.0);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 23);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: temp, operator: <=, value: 8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 69);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.7);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 1);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.2);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Galati);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.6);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Harlau);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 1.0);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.0);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: !=, value: Harlau);(factor: temp, operator: !=, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 23);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.1);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: ==, value: 25);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.2);(factor: temp, operator: >, value: 8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.2);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: temp, operator: !=, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.8);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.2);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 1.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.1);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 30);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: <=, value: 3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.9);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.7);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.3);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 1.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 23);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: temp, operator: <, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 4);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >=, value: 33);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: >, value: 0.9);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 23);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: ==, value: 15.04.2023);(factor: temp, operator: ==, value: -10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: temp, operator: >=, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: temp, operator: <=, value: 19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.3);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 23);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.0);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: !=, value: 37);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: ==, value: 13.04.2023);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.6);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.5);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: <, value: -16);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.0);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.3);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: ==, value: -17);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);(factor: temp, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.3);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 1.0);(factor: temp, operator: >=, value: 38);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 1);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >=, value: 17);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: 30);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.4);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 69);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: temp, operator: !=, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 23);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.3);(factor: date, operator: ==, value: 10.04.2023);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 12.04.2023);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: <, value: 2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 23);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: >=, value: 0.6);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: temp, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 1);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.1);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.8);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: !=, value: Galati);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: <=, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: >, value: 0.6);(factor: temp, operator: >=, value: 25);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.8);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);(factor: city, operator: !=, value: Braila);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: ==, value: 0.7);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.9);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: !=, value: Braila);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: !=, value: 0.4);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 1.0);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: !=, value: -2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: <, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 69);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.6);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.5);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 1.0);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >, value: 1.0);(factor: temp, operator: <, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Braila);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 15);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: ==, value: 0.0);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.3);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.9);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);(factor: temp, operator: >=, value: 16);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.2);(factor: date, operator: ==, value: 14.04.2023);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.4);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 1);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.4);(factor: temp, operator: ==, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.7);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 15);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: <=, value: 33);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.5);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.5);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Galati);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: temp, operator: !=, value: 16);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >=, value: 25);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Galati);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: !=, value: 10);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: <=, value: -18);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 4);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >=, value: 21);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 1);(factor: temp, operator: <, value: 9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: !=, value: -2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.1);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 15);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: temp, operator: !=, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.4);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);(factor: date, operator: ==, value: 10.04.2023);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.8);(factor: temp, operator: !=, value: 19);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 23);(factor: city, operator: !=, value: Darabani);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 1.0);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: !=, value: -17);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.1);(factor: temp, operator: !=, value: 10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Braila);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <=, value: 1.0);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);(factor: date, operator: ==, value: 12.04.2023);(factor: temp, operator: !=, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.7);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.2);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: !=, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: >, value: 30);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Harlau);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 4);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 15);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 27);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.7);(factor: temp, operator: >, value: 8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 4);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: temp, operator: <, value: 9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.6);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.3);(factor: temp, operator: <=, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.3);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 10);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: >, value: 0.3);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: ==, value: 30);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.4);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 4);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.5);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.1);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 1);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.1);(factor: temp, operator: <, value: 18);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: <, value: 31);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 1.0);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.9);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.3);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.1);(factor: temp, operator: >=, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: !=, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.5);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 23);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 1.0);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 15);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.3);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 11.04.2023);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: ==, value: 15.04.2023);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 23);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.8);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: >=, value: 0.8);(factor: temp, operator: >=, value: -8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 1.0);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.1);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.0);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 15);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: <=, value: 26);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.0);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 1.0);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 27);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 23);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.5);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Darabani);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >, value: 0.6);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.5);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 23);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: <, value: 16);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Braila);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Bucharest);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: <=, value: -18);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 1);(factor: temp, operator: >, value: 11);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.5);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: >, value: 8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: rain, operator: >=, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: temp, operator: ==, value: -20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Galati);(factor: temp, operator: <=, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.7);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: ==, value: 16);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.5);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >=, value: 0.4);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >=, value: -10);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: temp, operator: <, value: 26);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.7);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);(factor: temp, operator: ==, value: 25);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 23);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: !=, value: Galati);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.6);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: <, value: 9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: <=, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 7);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.9);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: temp, operator: !=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: !=, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: <, value: 0.0);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 23);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: temp, operator: ==, value: -1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: !=, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: >=, value: -9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >=, value: 35);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 27);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 27);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 4);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: !=, value: -7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: <, value: 37);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: !=, value: -11);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: >=, value: 0.4);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);(factor: temp, operator: <, value: -4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: 28);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);(factor: temp, operator: !=, value: -19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: <, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: ==, value: 8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: temp, operator: ==, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.9);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.9);(factor: date, operator: ==, value: 11.04.2023);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: !=, value: 18);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.0);(factor: temp, operator: !=, value: 33);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Braila);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 23);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 1.0);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 1.0);(factor: date, operator: ==, value: 12.04.2023);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 69);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: <=, value: 11);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.4);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 27);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 23);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.7);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 1.0);(factor: temp, operator: <, value: -8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 1);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.5);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 7);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: ==, value: 13.04.2023);(factor: temp, operator: >=, value: 0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: !=, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 27);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: !=, value: 0.0);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.8);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 7);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.8);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.3);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.1);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: temp, operator: !=, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <=, value: 0.0);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: !=, value: 0.1);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 27);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: !=, value: -4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >=, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: temp, operator: <=, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.9);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.1);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 23);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.0);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.7);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.5);(factor: temp, operator: !=, value: 13);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 1.0);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.4);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.0);(factor: temp, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.0);(factor: date, operator: ==, value: 10.04.2023);(factor: temp, operator: >=, value: 24);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 4);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.7);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.3);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 15);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 15);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.9);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: <=, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 15);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);(factor: temp, operator: <, value: 8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 1);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.7);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: !=, value: 2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.4);(factor: temp, operator: >, value: -2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 1.0);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 7);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.9);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: ==, value: 12.04.2023);(factor: temp, operator: >, value: -1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: temp, operator: <=, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 23);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 27);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: 30);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 29);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Bucharest);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <, value: 0.9);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: <, value: 26);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: temp, operator: >=, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: >=, value: 0.2);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 15);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 7);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);(factor: temp, operator: ==, value: 9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 7);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.1);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 69);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: ==, value: -1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 7);(factor: temp, operator: >, value: 9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: !=, value: Galati);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 1.0);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: <=, value: -1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 1.0);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: date, operator: ==, value: 15.04.2023);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 23);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);(factor: rain, operator: <=, value: 1.0);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: !=, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.1);(factor: temp, operator: >, value: 21);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);(factor: temp, operator: >=, value: -16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: !=, value: 0.7);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 4);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <=, value: 0.7);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: >, value: -13);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);(factor: temp, operator: >, value: 30);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.5);(factor: temp, operator: >, value: 37);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);(factor: temp, operator: >, value: 14);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.4);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 27);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 27);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.3);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.7);(factor: temp, operator: <, value: 5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 15);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 23);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 18);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 16);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 23);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 15);(factor: temp, operator: >, value: -15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.3);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 69);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: temp, operator: ==, value: 25);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >=, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.6);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: 39);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.2);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 7);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: >, value: 0.1);(factor: temp, operator: !=, value: -20);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: rain, operator: >, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 69);(factor: city, operator: !=, value: Braila);(factor: temp, operator: >, value: 12);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.8);(factor: temp, operator: >=, value: 29);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.3);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 4);(factor: city, operator: !=, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.2);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: temp, operator: >, value: -4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 27);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 4);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Galati);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: <=, value: 30);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.3);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: <=, value: -2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 4);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.9);(factor: date, operator: ==, value: 15.04.2023);(factor: temp, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Galati);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);(factor: temp, operator: >, value: -12);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: >, value: 35);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: <, value: -16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: !=, value: 4);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 1);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >, value: 1.0);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 7);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 1.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Galati);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 4);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);(factor: temp, operator: >, value: 34);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 69);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: <=, value: 11);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: temp, operator: >, value: 25);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <=, value: 0.8);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.3);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 4);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: !=, value: 0.1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.6);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 27);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <=, value: 1.0);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: >, value: 0.5);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 15);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: date, operator: ==, value: 14.04.2023);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.1);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.7);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.5);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.8);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 1);(factor: temp, operator: >, value: 22);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 4);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.3);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 1.0);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <, value: 23);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: -16);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 69);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: ==, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 15);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: >, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: stationId, operator: >, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 1);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 27);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: !=, value: 0.1);(factor: temp, operator: >, value: -3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >=, value: 0.7);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 31);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.7);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 15);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 4);(factor: rain, operator: >, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.2);(factor: temp, operator: >, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.8);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: !=, value: Braila);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: city, operator: !=, value: Darabani);(factor: temp, operator: >, value: 19);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.5);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.1);(factor: temp, operator: >, value: 6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >=, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 1);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: -10);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.1);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 1.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.9);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.7);(factor: temp, operator: >, value: -5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <, value: 15);(factor: temp, operator: >, value: -20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: ==, value: 1.0);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Galati);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Darabani);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 1);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 15);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: >=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: temp, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 23);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: <, value: 0.4);(factor: temp, operator: <, value: -4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 1);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 27);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 69);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Darabani);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.3);(factor: temp, operator: >, value: -18);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >=, value: 23);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: temp, operator: >, value: -11);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 7);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);(factor: date, operator: !=, value: 10.04.2023);(factor: temp, operator: !=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: !=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: <, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: >=, value: 0.1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: !=, value: 0.2);(factor: date, operator: !=, value: 10.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 27);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 1);(factor: city, operator: !=, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);(factor: temp, operator: >, value: 36);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Galati);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 4);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.9);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.8);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Darabani);(factor: date, operator: !=, value: 14.04.2023);(factor: temp, operator: !=, value: 39);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >=, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >=, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: >=, value: 0.8);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 27);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 4);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: -9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: >=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.4);(factor: date, operator: !=, value: 15.04.2023);(factor: temp, operator: >, value: 13);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 14.04.2023);(factor: temp, operator: >, value: 3);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: ==, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Bucharest);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: ==, value: 1.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: temp, operator: >, value: -14);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: <=, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: temp, operator: >, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: ==, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 15);(factor: rain, operator: >, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 27);(factor: rain, operator: ==, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: date, operator: ==, value: 11.04.2023);(factor: temp, operator: >, value: -17);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 4);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 13.04.2023);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.0);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: <, value: 0.4);(factor: temp, operator: >, value: 17);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.5);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 27);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 69);(factor: rain, operator: ==, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Galati);(factor: rain, operator: >, value: 0.2);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 27);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <=, value: 27);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 32);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: !=, value: 69);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: temp, operator: >, value: 38);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: >, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 15);(factor: city, operator: ==, value: Darabani);(factor: temp, operator: >, value: 27);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: city, operator: !=, value: Braila);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.0);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 69);(factor: rain, operator: <, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: >, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: date, operator: !=, value: 16.04.2023);(factor: temp, operator: >, value: 2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: !=, value: 0.0);(factor: temp, operator: >=, value: -7);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: rain, operator: !=, value: 0.7);(factor: temp, operator: <=, value: -20);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: >=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.4);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <, value: 0.6);(factor: temp, operator: >, value: 0);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: !=, value: 0.8);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: >, value: 15);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: <=, value: 23);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: ==, value: 0.2);(factor: date, operator: !=, value: 12.04.2023);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);(factor: rain, operator: <, value: 0.1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.5);(factor: temp, operator: >, value: 33);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: ==, value: Harlau);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >, value: 7);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >, value: 1.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: temp, operator: >, value: 4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: rain, operator: <, value: 0.4);(factor: date, operator: ==, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: ==, value: 27);(factor: rain, operator: >=, value: 0.3);(factor: date, operator: !=, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 7);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: <=, value: 69);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <, value: 1);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 1);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: -19);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: >=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <, value: 15);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: city, operator: !=, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >=, value: 0.6);(factor: date, operator: ==, value: 15.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >, value: 1);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 15);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: temp, operator: >, value: -8);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 15);(factor: city, operator: !=, value: Galati);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 1);(factor: rain, operator: <, value: 0.1);(factor: temp, operator: <, value: 28);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 4);(factor: city, operator: !=, value: Harlau);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: >, value: 69);(factor: rain, operator: <=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: ==, value: 11.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.9);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 7);(factor: city, operator: !=, value: Bucharest);(factor: rain, operator: ==, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.6);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Braila);(factor: date, operator: !=, value: 14.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.5);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 4);)
Subscription Constraints: ((factor: direction, operator: ==, value: N);(factor: stationId, operator: !=, value: 4);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: ==, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Braila);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 1);(factor: city, operator: !=, value: Braila);)
Subscription Constraints: ((factor: direction, operator: !=, value: E);(factor: city, operator: ==, value: Harlau);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: <=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);(factor: stationId, operator: <, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: ==, value: 0.6);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: <=, value: 1);(factor: rain, operator: ==, value: 0.5);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: >, value: 0.6);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: >=, value: 23);(factor: rain, operator: <=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 4);(factor: city, operator: ==, value: Braila);(factor: rain, operator: !=, value: 0.8);(factor: temp, operator: >, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 15);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: !=, value: 27);(factor: city, operator: !=, value: Darabani);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: ==, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: ==, value: 69);(factor: rain, operator: <, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 27);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: ==, value: 4);(factor: temp, operator: >, value: 26);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);(factor: rain, operator: !=, value: 0.4);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Braila);(factor: temp, operator: >, value: 24);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 27);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.7);(factor: date, operator: !=, value: 13.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: <=, value: 27);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Galati);(factor: rain, operator: <=, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: ==, value: 1);(factor: city, operator: ==, value: Bucharest);(factor: date, operator: ==, value: 12.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 69);(factor: city, operator: ==, value: Braila);(factor: temp, operator: !=, value: -6);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 7);(factor: rain, operator: <, value: 0.5);)
Subscription Constraints: ((factor: direction, operator: !=, value: N);(factor: stationId, operator: >=, value: 23);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: <=, value: 0.6);(factor: temp, operator: >, value: 20);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: >, value: 7);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <, value: 4);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: !=, value: 69);)
Subscription Constraints: ((factor: direction, operator: ==, value: E);(factor: stationId, operator: >, value: 69);(factor: rain, operator: >, value: 0.0);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: stationId, operator: >=, value: 7);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: >, value: 0.4);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Galati);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: <, value: 7);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 69);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: rain, operator: !=, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: !=, value: 27);(factor: city, operator: ==, value: Darabani);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 15);(factor: city, operator: ==, value: Harlau);(factor: rain, operator: >=, value: 0.1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SE);)
Subscription Constraints: ((factor: direction, operator: ==, value: W);(factor: stationId, operator: <, value: 7);(factor: city, operator: ==, value: Braila);(factor: rain, operator: >=, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: >=, value: 1);)
Subscription Constraints: ((factor: direction, operator: !=, value: SW);(factor: city, operator: ==, value: Bucharest);(factor: rain, operator: <=, value: 0.3);(factor: date, operator: !=, value: 15.04.2023);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: stationId, operator: >, value: 1);(factor: city, operator: ==, value: Braila);(factor: rain, operator: ==, value: 0.6);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Braila);(factor: rain, operator: <=, value: 0.6);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 23);(factor: rain, operator: <=, value: 0.9);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: rain, operator: !=, value: 0.4);)
Subscription Constraints: ((factor: direction, operator: ==, value: S);(factor: stationId, operator: <=, value: 23);(factor: city, operator: ==, value: Galati);(factor: rain, operator: >=, value: 0.2);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: rain, operator: <, value: 0.3);)
Subscription Constraints: ((factor: direction, operator: ==, value: NE);(factor: stationId, operator: !=, value: 69);(factor: rain, operator: <, value: 0.7);)
Subscription Constraints: ((factor: direction, operator: !=, value: S);(factor: rain, operator: <, value: 0.0);(factor: date, operator: !=, value: 16.04.2023);)
Subscription Constraints: ((factor: direction, operator: ==, value: SW);(factor: stationId, operator: ==, value: 23);(factor: rain, operator: !=, value: 0.9);)
Subscription Constraints: ((factor: stationId, operator: ==, value: 4);(factor: city, operator: ==, value: Bucharest);)
Subscription Constraints: ((factor: direction, operator: !=, value: NE);(factor: city, operator: !=, value: Galati);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: city, operator: ==, value: Darabani);(factor: rain, operator: <, value: 0.0);(factor: temp, operator: >=, value: 14);)
Subscription Constraints: ((factor: direction, operator: !=, value: W);(factor: stationId, operator: >=, value: 15);)
